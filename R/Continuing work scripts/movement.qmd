---
title: "Movement classifications"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

Drawing inspiration from Lenoir & Svenning, we aim to characterize general distribution change patterns in species from the NEFSC Bottom Trawl Survey.

![](2014_LenoirandSvenning_RangeShiftReview.jpg){fig-align="center"}

```{r}
#| label: load libraries and dependencies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
# install.packages("matrixStats")
library(matrixStats)
# install.packages("ggridges")
library(ggridges)
library(gt)

# # species data
# species <- read_csv("/Users/clovas/Documents/necc_distributions/Data/speciesList_inNECC.csv") %>%
#   rename("comname" = "Species_comnam") %>%
#   mutate(comname   = tolower(comname)) %>%
#   # filter(NECC == "Y") %>%
#   select(comname)

species <- read_csv("/Users/clovas/Documents/Decadal_Variability/Data/species_list_final.csv") # more extensive species list


# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname & est_year >= 1970) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  filter(!est_year %in% c(2017, 2020)) %>% 
  mutate(decade = 10*est_year %/% 10)

```

```{r}
#| label: quantiles
#| echo: false
#| message: false
#| warning: false

# Calculate and plot 5%, 10%, 25%, 75%, 90%, and 95% biomass-weighed percentiles
grouped_quantiles <- function(clean_survey, ...){
  clean_survey %>% 
    group_by(comname, ...) %>% 
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      avg_lat         = mean(decdeg_beglat),
      # Weight quantiles
      `5%`  = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.05, na.rm = T),
      `10%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.10, na.rm = T), 
      `25%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.25, na.rm = T),
      `50%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.50, na.rm = T),
      `75%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.75, na.rm = T), 
      `90%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.90, na.rm = T),
      `95%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.95, na.rm = T),
      .groups = "drop") %>%
    mutate(across(where(is.numeric), round, 4))
}

quantiles <- grouped_quantiles(clean_survey, est_year, season)

```

# Directional movement

```{r}
#| label: directional movement
#| echo: false
#| message: false
#| warning: false

## Comparing slopes

# Here we compare the slopes of the 5th, 50th and 95th percentiles of species distributions. Slopes are based on a 5-year rolling average of biomass-weighted latitudes. We characterize the species distribution trends by the direction and significance of the slope. We will examine magnitude in a later analysis.

quantiles %>% 
  pivot_longer(cols = 7:13, names_to = "quantile", values_to = "lat") %>%
  select(comname, est_year, quantile, season, lat) %>%
  filter(quantile %in% c("5%", "50%", "95%")) %>%
  group_by(comname, quantile, season) %>%
  mutate(rollmean = zoo::rollapplyr(lat, width = 5, FUN = mean, align = "center", partial = T)) %>%
  group_by(comname, quantile, season) %>%
  nest() %>%
  mutate(mod  = map(data, function(x){lm(est_year ~ rollmean, data = x)}),
         tidy = map(mod, broom::tidy)) -> mods

slopes <- mods %>%
  select(comname, quantile, season, tidy) %>%
  unnest(tidy) %>%
  filter(!term == "(Intercept)") %>%
  rename("slope" = "estimate") %>%
  select(comname, season, quantile, slope, p.value) %>%
  mutate(signif   = ifelse(p.value <= 0.05, "true", "false"),
         movement = ifelse(slope > 0, "+", "-"))

# trends
slopes %>% 
  select(comname, season, quantile, signif, movement) %>% 
  filter(signif == "true" & movement == "+") %>%
  mutate(trend = "northward") %>%
  full_join(slopes %>% 
              select(comname, season, quantile, signif, movement) %>% 
              filter(signif == "true" & movement == "-") %>%
              mutate(trend = "southward")) %>%
  full_join(slopes %>% 
              select(comname, season, quantile, signif, movement) %>% 
              filter(signif == "false" & movement == "-" | signif == "false" & movement == "+") %>%
              mutate(trend = "stable")) %>%
  arrange(comname, quantile) %>%
  select(comname, season, quantile, trend) %>%
  pivot_wider(names_from = "quantile", values_from = "trend") -> trends
  

# trends  %>%
#   mutate(comname = str_to_sentence(comname)) %>%
#   gt(groupname_col = NULL) %>% 
#   tab_spanner(columns = c("5%", "50%", "95%"), label = md("**Percentiles**")) %>%
#   cols_label(comname = md("**Common name**"))

```

## Characterizing distributions

Distribution changes are characterized by the movement trends of the 5th, 50th, and 95th percentiles (representing distibution edges).

-   *Stable*: All edges and centroid are stable.

-   *March*: All edges and centroid are showing movement in the same direction (northward, southward)

-   *Expand*: The centroid is stable and edges are moving away from each other.

-   *Contract*: The centroid is stable and edges are moving towards each other.

-   *Lean*: The centroid and one edge are moving in the same direction.

-   *Retract*: The centroid and one edge are stable while one edge moves towards the centroid.

```{r}
#| label: characterizing movement
#| echo: false
#| message: false
#| warning: false

trends %>%
  filter(`5%` == "stable" & `50%` == "stable" & `95%` == "stable") %>% 
  mutate(distribution = "stable") %>% 
  full_join(trends %>%
              filter(`5%` == "northward" & `50%` == "northward" & `95%` == "northward"| 
                     `5%` == "southward" & `50%` == "southward" & `95%` == "southward") %>% 
              mutate(distribution = "march")) %>%
  full_join(trends %>%
              filter(`5%` == "southward" & `95%` == "northward") %>% 
              mutate(distribution = "expand")) %>%
  full_join(trends %>%
              filter(`5%` == "northward" & `95%` == "southward") %>% 
              mutate(distribution = "contract")) %>%
  full_join(trends %>%
              filter(`5%` == "stable"    & `50%` == "northward" & `95%` == "northward"|
                     `5%` == "northward" & `50%` == "northward" & `95%` == "stable"|
                     `5%` == "stable"    & `50%` == "southward" & `95%` == "southward"|
                     `5%` == "southward" & `50%` == "southward" & `95%` == "stable") %>% 
              mutate(distribution = "lean")) %>%
  full_join(trends %>%
              filter(`5%` == "northward" & `50%` == "stable" & `95%` == "stable" |
                     `5%` == "stable"    & `50%` == "stable" & `95%` == "southward") %>% 
              mutate(distribution = "retract")) %>%
  full_join(trends) %>% 
  arrange(comname) -> trends # figure out what/who is missing 

write_csv(trends, here("Data", "trends.csv"))
 
match <- trends %>% 
  select(comname, season, distribution) %>% 
  pivot_wider(names_from = "season", values_from = "distribution") %>% 
  mutate(match = ifelse(`Fall` == `Spring`, T, F))

mis_match <- match %>% 
  filter(match == FALSE)

weirdos <- match %>% 
  filter(is.na(match)) %>% 
  left_join(trends) %>% 
  select(!c(`Fall`,`Spring`, `match`)) # for all but longfin squid, the weird shifts are happening in the fall


# trends %>% 
#   mutate(comname = str_to_sentence(comname)) %>% 
#   select(comname,distribution) %>%
#   pivot_wider(names_from = "distribution", values_from = "comname") %>%
#   gt(groupname_col = NULL) %>%
#   cols_label(
#     stable = md("**Stable**"),
#     march  = md("**March**"),
#     expand = md("**Expand**"),
#     contract = md("**Contract**"),
#     lean     = md("**Lean**"),
#     "NA"     = md("**Unclassified**"),
#     # retract  = md("**Retract**")
#   ) %>% 
#   cols_move_to_end("NA") %>%
#   cols_move("expand", after = "march")

```

```{r}
#| label: quantile plots
#| echo: false
#| message: false
#| warning: false
#| column: page
#| fig-align: center
#| fig-height: 11
#| fig-width: 9

lat_shift <- quantiles %>% 
  pivot_longer(cols = 7:13, names_to = "quantile", values_to = "lat") %>%
  select(comname, season, est_year, quantile, lat) %>%
  group_by(comname, season, quantile) %>%
  mutate(rollmean = zoo::rollapplyr(lat, width = 5, FUN = mean, align = "center", partial = T)) %>%
  left_join(trends %>% select(comname, distribution)) %>%
  group_by(comname) 

lat_shift$factor <- factor(lat_shift$quantile, levels = rev(c("5%","10%","25%","50%","75%","90%","95%")))

lat_shift <- lat_shift %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(plot = map2(data, comname, function(x,y){
    out <- ggplot(x) +
      geom_line(aes(x = est_year, y = rollmean, color = factor), linetype = 2) +
      geom_smooth(aes(x = est_year, y = rollmean, color = factor), method = "lm", se = F) +
      ylab("Latitude") + xlab("Year") + ggtitle(str_to_sentence(comname), subtitle = x$classification) + 
      facet_wrap(~factor(season, levels = c("Spring","Fall")), nrow = 1) +
      guides(color = guide_legend("Percentiles")) +
      scale_color_gmri() +
      theme_gmri(strip.background = element_rect(fill = "transparent"),
                 strip.text = element_text(color = "black"))
    
    # filename = paste(comname, "lat_shift_percentiles.png", sep="_")
    # ggsave(out, filename = paste(here("Temp_Results", "Lat percentiles"), filename, sep="/"), width = 7, height =  5, units="in", bg = "white")
    }))

# lat_shift$plot[[27]]

# all_lat_shift <- 
gridExtra::marrangeGrob(lat_shift$plot, layout_matrix = matrix(1:3, nrow = 3, ncol = 1, byrow = TRUE), top = NULL)

# ggsave(all_lat_shift, file=here("all_latitudinal_shifts.pdf"), width = 8.5, height = 11, units = "in")
```

```{r}
#| label: edge movement 
#| echo: false
#| warning: false
#| message: false


```


```{r}
#| label: quantile movement 
#| echo: false
#| warning: false
#| message: false
#| fig-align: center
#| fig-height: 13
#| fig-width: 9

## Rate of movement

# Now we want to explore the magnitude of species movement, coupled with their directional trends, to ultimately compare # distribution changes of predator and prey species. We could compare rates of centroid movement, or edges-only.


# slopes %>% 
#   filter(quantile %in%  c("5%","50%","95%")) %>% 
#   left_join(trends) %>%
#   ungroup() %>%
#   select(comname, slope, quantile, `5%`,`50%`, `95%`) %>%
#   rename("trend_5" = "5%",
#          "trend_50" = "50%", 
#          "trend_95" = "95%") %>% 
#   pivot_wider(names_from = "quantile", values_from = "slope") %>%
#   mutate(comname = str_to_sentence(comname)) %>%
#   gt(groupname_col = NULL) %>% 
#   tab_spanner(columns = c(`5%`, trend_5), label = md("**5th Percentile**")) %>%
#   tab_spanner(columns = c(`50%`, trend_50), label = md("**50th Percentile**")) %>%
#   tab_spanner(columns = c(`95%`, trend_95), label = md("**95th Percentile**")) %>%
#   cols_label(
#       comname = md("**Common name**"),
#       `5%` = md("**Slope**"),
#       `50%` = md("**Slope**"),
#       `95%` = md("**Slope**"),
#       trend_5 = md("**Trend**"),
#       trend_50 = md("**Trend**"),
#       trend_95 = md("**Trend**")
#     ) %>%
#   fmt_number(columns = everything(), decimals = 2) %>%
#   tab_style(
#     style = cell_text(style = "italic"),
#     locations = cells_body(columns = c(trend_5, trend_50, trend_95)))

# mods %>%
#   filter(quantile == "50%") %>%
#   select(comname, quantile, data) %>%
#   unnest(data) %>%
#   left_join(trends %>% select(comname, `50%`) %>% rename("trend" = "50%")) %>%
#   ggplot() +
#   geom_line(aes(x =est_year, y = rollmean, color = comname)) +
#   facet_wrap(~trend,ncol = 1) +
#   xlab("Year") + ylab("Latitude") +
#   scale_color_gmri() +
#   theme_gmri(legend.position = "bottom",
#              strip.background = element_rect(fill = "white"),
#              strip.text = element_text(color = "black"))


```



