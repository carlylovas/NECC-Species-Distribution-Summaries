---
title: "Mixed effects model"
subtitle: "Seasonal distance predictor"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: load data and dependecies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(patchwork)
library(broom)

species <- read_csv("/Users/clovas/Documents/Decadal_Variability/Data/species_list_final.csv") # more extensive species list

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  filter(est_year >= 1970) %>%
  mutate(year_day = lubridate::yday(est_towdate)) %>% 
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, year_day, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, year_day, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  # filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop")


```

## Survey tow year days

2017 and 2020 omitted.

```{r}
#| label: year day
#| echo: false
#| message: false

year_day <- clean_survey %>% 
  select(est_year, season, year_day, id, survey_area) %>% 
  filter(!est_year %in% c(2017, 2020))

tows <- year_day %>% 
  group_by(est_year, season) %>% 
  summarise(
    min  = min(year_day),
    max  = max(year_day),
    mean = mean(year_day),
    median = median(year_day)
  ) %>% 
  pivot_longer(cols = min:median, names_to = "stat", values_to = "value")


ggplot(data = tows, aes(x = est_year, y = value, color = stat)) +
  geom_line() +
  # geom_point() +
  facet_wrap(~season, nrow = 2, scales = "free_y") + 
  # ylim(c(0,365)) +
  ylab("Year-Day") + xlab("Year") +
  scale_color_gmri() +
   theme_gmri(strip.background = element_rect(fill = "transparent", linetype = 1, linewidth = 1, color = "transparent"),
                 strip.text = element_text(color = "black", hjust = 0)) # -> plot

# ggsave("year_day.png", plot, bg = "white")

```

## Median year day

2017 and 2020 omitted.

```{r}
#| label: delta median
#| echo: false
#| message: false
#| warning: false


year_day %>% 
  group_by(est_year, season) %>% 
  summarise(median = median(year_day)) %>% 
  pivot_wider(names_from = "season", values_from = "median") %>% 
  mutate(delta_year_day = (Fall-Spring)) -> delta_year_day

tows %>% 
  filter(stat == "median") %>% 
  ggplot() + 
  geom_line(aes(x = est_year, y = value,group = est_year), color = "#535353", alpha = 0.8) +
  geom_point(aes(x = est_year, y = value, color = season)) +
  ggtitle("Spring & Fall Median Year Day") +
  xlab("Year day") + ylab("Year") +
  scale_color_gmri() +
  theme_gmri()

ggplot(delta_year_day) +
  geom_line(aes(x = est_year, y = delta_year_day), color = "#535353", alpha = 0.8) +
  geom_point(aes(x = est_year, y = delta_year_day)) +
  scale_color_gmri() +
  ggtitle("Difference in median year day", subtitle = "Fall-spring") + 
  ylab("Number of days") + xlab("Year") +
  ylim(c(NA, 225)) +
  theme_gmri()

```

## Seasonal temperatures by season

Across all tows, are surveyed spring temperatures in the Mid-Atlantic bight comparable to the surveyed fall temperatures in the Gulf of Maine?

```{r}
#| label: surveyed temps
#| echo: false
#| message: false
#| warning: false

clean_survey %>% 
  select(est_year, season, surftemp, bottemp, id, survey_area) %>% 
  ungroup() %>% 
  filter(survey_area %in% c("GoM", "MAB") & !est_year %in% c(2017, 2020)) %>%
  mutate(season_area = paste(survey_area, season, sep = "-")) %>% 
  group_by(est_year, season_area) %>% 
  summarise(sst = mean(surftemp, na.rm = T),
         bt  = mean(bottemp,  na.rm = T)) %>% 
  filter(season_area %in% c("GoM-Fall", "MAB-Spring"))-> survey_temps # maybe do a t-test?  

ggplot(data = survey_temps) + 
  # geom_line(aes(x = est_year, y = sst, color = season_area)) +
  geom_point(aes(x = est_year, y = sst, color = season_area)) +
  geom_line(aes(x = est_year, y = sst, group = est_year)) +
  scale_color_gmri() +
  xlab("Year") + ylab("Sea surface temp") + ggtitle("Surveyed sea surface temperatures") + 
  theme_gmri()

delta_sst <- survey_temps %>% 
  select(!bt) %>% 
  pivot_wider(names_from = "season_area", values_from = "sst") %>% 
  mutate(delta_sst = abs(`GoM-Fall` - `MAB-Spring`))


```

## Linear mixed effects model

### SOE 2024 feeding guilds

```{r}
#| label: ecodata
#| echo: false
#| message: false
#| warning: false

library(ecodata)

species_groupings <- ecodata::species_groupings # from ecodata
species_upper <- species %>% summarise(COMNAME = toupper(comname))

# garrison_link <- species_groupings %>% 
#   filter(!is.na(Garrison.Link)) %>% 
#   filter(COMNAME %in% species_upper$COMNAME) %>% 
#   arrange(COMNAME) %>%
#   select(COMNAME, Garrison.Link, SizeCat) %>% 
#   distinct()

soe_24 <- species_groupings %>% 
  select(COMNAME, SOE.24) %>% 
  filter(COMNAME %in% species_upper$COMNAME) %>% 
  distinct() 

```

#### Linear mixed effects regression (lmer)

`dist_km ~ delta_year_day + est_year*SOE_24 + (1|est_year) + (1|comname)`

```{r}
#| label: lme
#| echo: false
#| warning: false
#| message: false

library(lme4)
library(ggeffects)
library(glmmTMB)

# build data frame with seasonal distance, seasonal year-day difference, species groups and year

# run first from updated_species_dist.qmd
seasonal_dist <- read_rds(here("Data", "seasonal_dist.rds"))

lme <- seasonal_dist %>% 
  #filter(count == "54") %>% 
  select(comname, data) %>% 
  unnest(data) %>%
  drop_na() %>% 
  select(comname, est_year, dist_km) %>% 
  mutate(COMNAME = toupper(comname)) %>% 
  left_join(delta_year_day %>% select(est_year, delta_year_day)) %>%
  left_join(delta_sst %>% select(est_year, delta_sst)) %>% 
  left_join(soe_24) %>%
  filter(!est_year %in% c(2017, 2020) & !SOE.24 == "Benthos") %>% 
  drop_na() %>% 
  ungroup() %>% 
  mutate(SOE_24 = factor(SOE.24, levels = c("Planktivore", "Benthivore", "Piscivore")),
         year_fac = factor(est_year)) # ensuring that the order of variables is consistent across models 

#########

model_1 <- lmer(dist_km ~ delta_year_day + est_year*SOE_24 + (1|est_year) + (1|comname), data = lme)

# summary(model_1, correlation = TRUE)

ggpredict(model_1, terms = c("est_year", "SOE_24")) %>% 
  plot()
```

#### Generalized linear mixed model using template model builder (glmmTMB)

`dist_km ~ delta_year_day + est_year*SOE_24 + (1|year_fac) + (1|comname), family=Gamma(link="log")`

```{r}
#| label: glmmTMB
#| echo: false
#| message: false
#| warning: false

model_2 <- glmmTMB(dist_km ~ delta_year_day + est_year*SOE_24 + (1|year_fac) + (1|comname), data = lme, family=Gamma(link="log"))

# summary(model_2, correlation = TRUE)

ggpredict(model_2, terms = c("est_year", "SOE_24")) %>% 
  plot()
```

#### Species specific glmm using REML

`dist_km ~ delta_year_day + est_year*comname + (1|year_fac), family = Gamma(link = "log"))`

```{r}
#| label: species level model
#| echo: false
#| message: false
#| fig-width: 9
#| fig-height: 9

library(emmeans)

species_model <- glmmTMB(dist_km ~ delta_year_day + est_year*comname + (1|year_fac), family = Gamma(link = "log"), data = lme, REML = T)

# summary(species_model)

# str(confint(species_model, level = 0.95))
# confint(species_model, level = 0.95)

# ggpredict(species_model, terms = c("est_year", "comname")) %>% 
#   plot(facets = TRUE, color = "bw", n_rows = 12) 

# predict_response(species_model, c("est_year", "comname"), collapse_tables = TRUE) -> responses
# 
# responses %>% 
#   arrange(group, x) %>% 
#   rename("est_year" = "x") %>% 
#   as_tibble() -> responses
# 
# ggplot(responses) +
#   geom_line(aes(x = est_year, y = predicted)) +
#   geom_ribbon(aes(x = est_year, ymin = conf.low, ymax = conf.high), alpha = 0.3) +
#   ggtitle("Predicted values of dist_km") +
#   ylab("dist_km") +
#   facet_wrap(~group, scales = "free_y", ncol = 4)

species_trends <- as.data.frame(emtrends(species_model, "comname", "est_year"))

species_trends %>% 
  left_join(lme %>% select(comname, SOE_24)) %>% 
  distinct() -> species_trends

# species_trends %>% 
#   mutate(difference = asymp.UCL-asymp.LCL)

ggplot(species_trends) +
  geom_vline(xintercept = 0.0, color = "#535353", alpha = 0.7) +
  geom_point(aes(y = forcats::fct_reorder(comname, est_year.trend), x = est_year.trend, color = SOE_24)) + 
  geom_segment(aes(x = asymp.LCL, xend = asymp.UCL, y = forcats::fct_reorder(comname, est_year.trend), color = SOE_24), alpha = 0.5) +
  xlim(c(-0.05, 0.05)) +
  xlab("slope") + ylab("species") +
  theme_gmri(panel.grid.major = element_line(linetype = 1, color = "#e9e9e9"),
             panel.grid.minor = element_line(linetype = 1, color = "#e9e9e9"),
             panel.border = element_rect(linetype = 1, color = "black")) 


```

### Delta SST as predictor
`dist_km ~ delta_sst + est_year*SOE_24 + (1|year_fac) + (1|comname), family=Gamma(link="log")` whereas delta SST is the difference between fall temperatures in the Gulf of Maine and spring temperatures in the mid-Atlantic bight.

```{r}
#| label: delta sst
#| echo: false
#| message: false
#| warning: true
#| fig-width: 9
#| fig-height: 9

model_3 <- glmmTMB(dist_km ~ delta_sst + est_year*SOE_24 + (1|year_fac) + (1|comname), data = lme, family=Gamma(link="log"))

# summary(model_3)

ggpredict(model_3, terms = c("est_year", "SOE_24")) %>% 
  plot()


species_model_2 <- glmmTMB(dist_km ~ delta_sst + est_year*comname + (1|year_fac), data = lme, family=Gamma(link="log"), REML = T)

species_trends_2 <- as.data.frame(emtrends(species_model_2, "comname", "est_year")) %>% 
  left_join(lme %>% select(comname, SOE_24)) %>% 
  distinct()

ggplot(species_trends_2) +
  geom_vline(xintercept = 0.0, color = "#535353", alpha = 0.7) +
  geom_point(aes(y = forcats::fct_reorder(comname, est_year.trend), x = est_year.trend, color = SOE_24)) + 
  geom_segment(aes(x = asymp.LCL, xend = asymp.UCL, y = forcats::fct_reorder(comname, est_year.trend), color = SOE_24), alpha = 0.5) +
  xlim(c(-0.05, 0.05)) +
  xlab("slope") + ylab("species") +
  theme_gmri(panel.grid.major = element_line(linetype = 1, color = "#e9e9e9"),
             panel.grid.minor = element_line(linetype = 1, color = "#e9e9e9"),
             panel.border = element_rect(linetype = 1, color = "black")) 


```


```{r}
#| label: glmm diag
#| echo: false
#| message: false
#| warning: false

# library(DHARMa)
# 
# plot(simulateResiduals(model_2))
# 
# car::Anova(model_2)

# effects::allEffects(model_2)

# MuMIn::dredge(model_2)

```
