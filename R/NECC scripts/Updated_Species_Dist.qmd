---
title: "NECC Species Summaries"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

Using the most recent bottom trawl survey data from the NEFSC, I've re-run my previous species distribution summaries and updated the changes in seasonal migration analyses.

The figure below depicts the rate of change (slope) of the distance between the spring and fall centroids for 48 species.

```{r}
#| label: load data and dependecies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(patchwork)
library(broom)

species <- read_csv("/Users/clovas/Documents/Decadal_Variability/Data/species_list_final.csv") # more extensive species list

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  filter(est_year >= 1970) %>%
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  mutate(decade = 10*est_year %/% 10)

center_bio <- function(clean_survey, ...){
  clean_survey %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      biomass_sd      = sd(biomass_kg),
      # All below are weighted by biomass
      avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
      avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
      avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
      avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
      avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
      depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
      temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
      lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
      lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
      .groups = "drop")
}

```

```{r}
#| label: center of gravity with season
#| echo: false
#| message: false
#| warning: false

with_season <- center_bio(clean_survey, est_year, season)

# run glm

with_season %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(lat = map(data, function(x){lm(avg_lat ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")}),
         lon = map(data, function(x){lm(avg_lon ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")})) -> with_season

# isolate coefficients 
with_season %>% 
  select(!data) %>%
  pivot_longer(cols = lat:lon, names_to = "variable", values_to = "data") %>% 
  unnest(data) %>% 
  select(comname, variable, estimate, p.value) -> with_season_coeff
```

```{r}
#| label: center of gravity without season
#| echo: false
#| message: false
#| warning: false

without_season <- center_bio(clean_survey, est_year)

# run glm
without_season %>% 
  group_by(comname) %>% 
  nest() %>%
  mutate(lat = map(data, function(x){lm(avg_lat ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")}),
         lon = map(data, function(x){lm(avg_lon ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")})) -> without_season

# isolate coefficients 
without_season %>% 
  select(!data) %>%
  pivot_longer(cols = lat:lon, names_to = "variable", values_to = "data") %>% 
  unnest(data) %>% 
  select(comname, variable, estimate, p.value) -> without_season_coeff
```

```{r}
#| label: seasonal distance
#| echo: false
#| message: false
#| warning: false

# is the difference in spring and fall centers of biomass changing over time?
seasonal_dist <- with_season %>% 
  unnest(data) %>% 
  select(comname, est_year, season, avg_lat, avg_lon, avg_depth) %>%
  # mutate(rollmean_lat = zoo::rollapplyr(avg_lat, width = 5, FUN = mean, align = "center", partial = T),
  #        rollmean_lon = zoo::rollapplyr(avg_lon, width = 5, FUN = mean, align = "center", partial = T))%>% # maybe include depth changes later
  group_by(comname, est_year ) %>% 
  nest() 

point_dist <- function(df){
  temp <- sf::st_as_sf(df,coords=c("avg_lon","avg_lat"), crs=4326, remove=FALSE)
  # temp <- sf::st_as_sf(df,coords=c("rollmean_lon","rollmean_lat"), crs=4326, remove=FALSE)
  out  <- sf::st_distance(temp)[1,2]
  return(out)
}

seasonal_dist %>% 
  mutate(dist    = map_dbl(data, possibly(point_dist, NA)),
         dist_km = dist/1000)%>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(count = map_dbl(data, function(x){nrow(x)}), 
         season_dist = map(data, function(x){lm(dist_km ~ est_year, data = x) %>% 
                          tidy() %>% 
                          filter(term == "est_year")})) %>% 
  unnest(season_dist) %>% 
  mutate(signif = ifelse(p.value <= 0.05, T, F)) -> seasonal_dist 

# save out 
# write_rds(seasonal_dist, here("Data","seasonal_dist.rds"))
```

```{r}
#| label: seasonal slopes
#| echo: false
#| message: false
#| warning: false
#| fig-width: 9
#| fig-height: 6
#| fig-align: center

# plotting rate of change in seasonal distance

seasonal_dist %>% 
  mutate(z = estimate > 0) %>% 
  ggplot()+
  geom_point(aes(x=comname, y=estimate, color=as.factor(z)))+
  ggrepel::geom_text_repel(aes(comname, estimate, label=comname), size=2.8, nudge_y=0.003)+
  theme_gmri(axis.text.x=element_blank(),
             axis.title.x=element_blank(),
             axis.ticks.x = element_blank(),
             axis.line.x = element_blank(),
             legend.position="none")+
  scale_color_gmri()+
  ylim(c(-4,4)) +
  geom_hline(yintercept = 0, linetype = 2, linewidth = 0.5, color = "black")+
  ylab("Rate of change (km/year)") + ggtitle("Changes in seasonal distance") # -> plot
# 
# ggsave(filename = "change_in_seasonal_distance.pdf", plot,  height = 8.5, width = 11, units = "in")


# plot the distance between centroids each year for each species 
seasonal_dist %>% 
  mutate(plot = map2(data, comname, function(x,y){
    ggplot(data = x) +
      geom_line(aes(x = est_year, y = dist_km)) +
      theme_gmri()+
      ggtitle(str_to_sentence(comname)) +
      xlab("Year") + ylab ("Distance between fall and spring centroids (km)")
  })) -> seasonal_dist


# seasonal_dist$plot[[40]]

```

```{r}
#| label: dist by species
#| echo: false
#| message: false
#| warning: false
#| fig-width: 9
#| fig-height: 6
#| fig-align: center

seasonal_dist %>% 
  select(comname, data) %>% 
  mutate(dist_plot = map(data, function(x){
    ggplot(data = x, aes(x = est_year, y = dist_km)) +
      geom_line(color = "#535353", alpha = 0.8) +
      geom_point(color = "#00608a") +
      ggtitle("Distance between spring and fall centroids") +
      ylab("Distance (km)") + xlab("Year") +
      theme_gmri(plot.title = element_text(size = 12)) 
  })) %>% 
  select(!data) -> dist_plot

# dist_plot$dist_plot[[1]]
```

```{r}
#| label: maps
#| echo: false
#| warning: false
#| message: false
#| fig-height: 13
#| fig-width: 9
#| fig-align: center

with_season %>% 
  select(comname, data) %>% 
  mutate(map = map2(data, comname, function(x,y){
    us <- rnaturalearth::ne_states(country = "united states of america")
    x  <- x %>% 
      mutate(decade = 10*est_year %/% 10) 
    plot <- ggplot() +
      geom_sf(data = us) +
      coord_sf(xlim = c(-66,-76), ylim = c(38,48)) +
      # ggtitle(str_to_sentence(comname)) + 
      ggtitle("Season center of biomass by decade") +
      ylab("Latitude") + xlab("Longitude") + 
      scale_x_continuous(breaks = c(-68, -71, -74)) +
      scale_y_continuous(breaks = c(38, 43, 48)) +
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = season)) +
      scale_color_gmri() + 
      guides(color = guide_legend(title = "Season")) +
      facet_wrap(~decade, nrow = 1) +
      theme_gmri(strip.background = element_rect(fill = "transparent", linetype = 1, linewidth = 1, color = "#e9e9e9"),
                 strip.text = element_text(color = "black"),
                 # axis.title = element_text(color = "#535353"),
                 # axis.text = element_text(color = "#535353"),
                 axis.line = element_line(color = "#e9e9e9"),
                 axis.ticks = element_line(color = "#e9e9e9"),
                 plot.title = element_text(size = 12),
                 panel.border = element_rect(color = "#e9e9e9", linetype = 1, linewidth = 1),
                 panel.grid.major = element_line(color = "#e9e9e9"))  
    
    return(plot)
  })) -> with_season

# with_season$map[[1]]

```

```{r}
#| label: time series
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-height: 6
#| fig-width: 9

with_season %>% 
  mutate(time_series = map2(data, comname, function(x,y){
    x  <- x %>% 
      mutate(decade = 10*est_year %/% 10) 
    out <- ggplot(data = x) +
      geom_line(aes(x = est_year, y = avg_lat,group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = avg_lat, color = season)) +
      scale_color_gmri() +
      theme_gmri(plot.title = element_text(size = 12)) +
      # ggtitle(str_to_sentence(comname)) + 
      ggtitle("Seasonal center of latitude") +
      xlab("Year") + ylab("Avg. Latitude") +
      guides(color = guide_legend(title = "Season"))
    return(out)
  })) -> with_season

# with_season$time_series[[40]]

```

```{r}
#| label: temp at centroid
#| echo: false
#| message: false
#| warning: true

# with_season %>% 
#   mutate(sst = map(data, function(x){
#     x <- x %>% 
#       group_by(season) %>% 
#       mutate(rollmean = zoo::rollapplyr(avg_sur_temp, width = 5, FUN = mean, align = "center", partial = T))
#     
#     p <- ggplot(data = x) +
#       geom_line(aes(x = est_year, y = rollmean, color = season)) +
#       scale_color_gmri() + 
#       xlab("Year") + ylab("Sea surface temperature") +
#       ggtitle("Sea surface temperature at seasonal centroids", subtitle = "5-year rolling mean") +
#       theme_gmri(plot.subtitle = element_text(size = 12)) 
#     
#     p1 <- p + annotate("rect", xmin = 2010, xmax = 2023, ymin = 4.5, ymax = 21.5, fill = "transparent", color = "#535353")
#     
#   })) -> surftemp

with_season %>% 
  unnest(data) %>%
  select(comname, est_year, season, avg_sur_temp) %>% 
  pivot_wider(names_from = "season", values_from = "avg_sur_temp") %>% 
  mutate(difference = abs(Fall-Spring)) -> delta_sst

with_season %>% 
  unnest(data) %>%
  select(comname, est_year, season, avg_bot_temp) %>% 
  pivot_wider(names_from = "season", values_from = "avg_bot_temp") %>% 
  mutate(difference = abs(Fall-Spring)) -> delta_bt

delta_sst %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(sst_plot = map(data, function(x){
    x <- x %>% 
      pivot_longer(cols = c("Fall","Spring"), names_to = "season", values_to = "value")
    
    ggplot(data = x) + 
      geom_line(aes(x = est_year, y = value, group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = value, color = season)) +
      ggtitle("Sea Surface Temperature at Center of Biomass") +
      xlab("Year") + ylab("SST") +
      scale_color_gmri() +
      theme_gmri()
    })) %>% 
  select(!data) -> delta_sst

# delta_sst$sst_plot[[1]]

delta_bt %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(bt_plot = map(data, function(x){
    x <- x %>% 
      pivot_longer(cols = c("Fall","Spring"), names_to = "season", values_to = "value")
    
    ggplot(data = x) + 
      geom_line(aes(x = est_year, y = value, group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = value, color = season)) +
      ggtitle("Bottom Temperature at Center of Biomass") +
      xlab("Year") + ylab("BT") +
      scale_color_gmri() +
      theme_gmri()
    })) %>%
  select(!data) -> delta_bt

# delta_bt$bt_plot[[1]]

```


```{r}
#| label: leading and trailing edge by season
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-height: 6
#| fig-width: 9

grouped_quantiles <- function(clean_survey, ...){
  clean_survey %>% 
    group_by(comname, ...) %>% 
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      avg_lat         = mean(decdeg_beglat),
      # Weight quantiles
      `5%`  = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.05, na.rm = T),
      `10%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.10, na.rm = T), 
      `25%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.25, na.rm = T),
      `50%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.50, na.rm = T),
      `75%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.75, na.rm = T), 
      `90%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.90, na.rm = T),
      `95%` = Hmisc::wtd.quantile(decdeg_beglat, weights = biomass_kg, probs = 0.95, na.rm = T),
      .groups = "drop") %>%
    mutate(across(where(is.numeric), round, 4))
}

quantiles <- grouped_quantiles(clean_survey, est_year, season)

quantiles <- quantiles %>% 
  pivot_longer(cols = 7:13, names_to = "quantile", values_to = "lat") %>%
  select(comname, est_year, season, quantile, lat) %>%
  group_by(comname, quantile) %>%
  mutate(rollmean = zoo::rollapplyr(lat, width = 5, FUN = mean, align = "center", partial = T))

quantiles %>% 
  filter(quantile %in% c("5%", "95%")) %>% 
  group_by(comname) %>%
  nest() %>% 
  summarise(percentiles = map2(data, comname, function(x,y){
    out <- ggplot(data = x) +
      geom_line(aes(x = est_year, y = rollmean, color = factor(quantile))) +
      geom_smooth(aes( x = est_year, y = rollmean, color = factor(quantile)), method = "lm", linetype = 2, alpha = 0.5, linewidth = 0.5, se = FALSE) +
      scale_color_manual(values = c("#ea4f12", "#00608a")) +
      ggtitle("Leading and trailing edge") +
      guides(color = guide_legend(title = "Percentile")) +
      ylab("Latitude (5-year rolling mean)") +
      xlab("Year") +
      facet_wrap(~season, ncol = 2) +
      guides(col = guide_legend(levels = c(`95%`, `5%`), title = "quantile")) +
      theme_gmri(strip.background = element_rect(fill = "transparent", linetype = 1, linewidth = 1, color = "transparent"),
                 strip.text = element_text(color = "black", hjust = 0),
                 plot.title = element_text(size = "12"))
                 # axis.title = element_text(color = "#535353"),
                 # axis.text = element_text(color = "#535353"))
                 # axis.line = element_line(color = "#e9e9e9"),
                 # axis.ticks = element_line(color = "#e9e9e9"),
                 # panel.border = element_rect(color = "#e9e9e9", linetype = 1, linewidth = 1),
                 # panel.grid.major = element_line(color = "#e9e9e9"))
    
    return(out)
  })) -> percentiles

# percentiles$percentiles[[40]]

with_season <- with_season %>%
  left_join(percentiles) %>%
  left_join(dist_plot) %>% 
  left_join(delta_sst) %>% 
  left_join(delta_bt)

```


```{r}
#| label: size class distribution
#| echo: false
#| message: false
#| warning: true

trawl_data %>%
  filter(est_year >= 1970) %>%
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, length_cm, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, length_cm) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>% 
  group_by(comname, est_year, season) %>%
  summarise(avg_lat = weightedMean(decdeg_beglat, w = biomass_kg),
            avg_lon = weightedMean(decdeg_beglon, w = biomass_kg),
            `5%`  = Hmisc::wtd.quantile(length_cm, weights = biomass_kg, probs = 0.05, na.rm = T),
            `50%` = Hmisc::wtd.quantile(length_cm, weights = biomass_kg, probs = 0.50, na.rm = T),
            `95%` = Hmisc::wtd.quantile(length_cm, weights = biomass_kg, probs = 0.95, na.rm = T)) -> size_test
```


```{r}
#| label: stitch em together
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-height: 13
#| fig-width: 13

library(grid)
library(gridExtra)

with_season %>% 
  select(!data) %>% 
  group_by(comname) %>%
  nest() %>% 
  mutate(species_profile = map2(data, comname, function(x,y){
    map <- x$map[[1]]
    times_series <- x$time_series[[1]]
    distance <- x$dist_plot[[1]]
    percentiles  <- x$percentiles[[1]]
    sst <- x$sst_plot[[1]]
    bt <- x$bt_plot[[1]]

    out <- grid.arrange(map, times_series, distance, percentiles, sst, bt, nrow = 5, layout_matrix=rbind(c(1,1), c(2,3), c(4,4), c(5,6)), top = textGrob(paste(str_to_sentence(comname)), gp = gpar(col = "black", fontsize = 15, fontface = "bold")))
  })) -> species_profiles 

```

```{r}
#| label: lobster plot
#| echo: false
#| message: false
#| warning: false

# library(rnaturalearth)
# library(rnaturalearthdata)
# library(sf)
# library(ggrepel)

# world <- ne_states(returnclass = "sf")
# cols <- c("#7D7C7C", "#22444B", "#0E6686", "#028ABD", "#02D2FF", "#b3e3ee")
# 
# 
# without_season %>% 
#   filter(comname == "american lobster") %>%
#   select(data) %>% unnest() %>% 
#   mutate(decade = 10*est_year %/% 10,
#          comname = stringr::str_to_sentence(comname)) %>%
#   filter(!est_year %in% c(2017,2020)) %>%
#   select(comname, est_year, decade, avg_lat, avg_lon)-> lobster 
# 
# write_csv(lobster, "lobster_biomass_center.csv")
# 
# ggplot(data = world)+
#   geom_sf()+ 
#   coord_sf(xlim=c(-76, -67), ylim=c(37.5,47.5)) +
#   geom_point(data = lobster, aes(x=avg_lon, y= avg_lat, color = factor(decade)), size = 2) +
#   scale_color_manual(values = cols)+
#   xlab("Longitude") + ylab("Latitude") + ggtitle("American lobster", subtitle = "Center of biomass") +
#   facet_wrap(~decade, nrow = 1) +
#   scale_y_continuous(breaks = c(40,42,44, 46)) + scale_x_continuous(breaks = c(-78,-72,-68)) +
#   theme_gmri(text = element_text(family = "Avenir"),
#              plot.title = element_text(size = 14),
#              plot.subtitle = element_text(size = 12),
#              legend.title = element_text(face = "bold", size = 10),
#              legend.text = element_text(size = 10), 
#              legend.position = "none",
#              axis.title = element_text(size = 12), 
#              axis.text = element_text(size = 10), 
#              strip.text = element_text(size = 12),
#              strip.background = element_rect(fill = "#00608A", color = "#00608A"), 
#              plot.margin = margin(0.5, 1.5, 0.5, 0),
#              panel.border = element_rect(fill = NA, linetype = 1, linewidth = 0.2, color = "black"),
#              panel.grid.major = element_line(color = "lightgray", linetype = 3)) +
#   guides(color = guide_legend(title = "Decade", size = 2, override.aes = list(size = 3))) -> plot1
#   
# ggplot(data = lobster) +
#   geom_line(aes(x=est_year, avg_lat), color = "#028ABD") +
#   geom_point(aes(x=est_year, y = avg_lat), color = "#028ABD") +
#   scale_y_continuous(labels = c("39°N", "40°N", "41°N", "42°N", "43°N")) +
#   xlab("Year") + ylab("Center of Latitude") + ggtitle("American lobster", subtitle = "Center of biomass by latitude") +
#   theme_gmri(text = element_text(family = "Avenir"),
#              plot.subtitle = element_text(size = 12),
#              axis.line = element_line(linewidth = 0.3),
#              panel.border = element_rect(fill = NA, linetype = 1, linewidth = 0.5, color = "black"),
#              panel.grid.major = element_line(color = "lightgray", linetype = 3)) -> plot2
# 
# 
# without_season %>%
#   filter(comname == "american lobster") %>%
#   select(data) %>%
#   unnest() %>%
#   filter(est_year %in% c(1993,2003,2013,2023)) %>%
#   mutate(comname = str_to_sentence(comname)) -> lobster_2
# 
# ggplot(data = world)+
#   geom_sf()+
#   coord_sf(xlim=c(-74, -66), ylim=c(41,47.5)) +
#   geom_point(data = lobster_2, aes(x=avg_lon, y= avg_lat, color = as.factor(est_year)), size = 3, alpha = 0.9) +
#   geom_text(data = lobster_2, aes(x=avg_lon, y= avg_lat, label = est_year), size = 3, vjust = -0.7, hjust = -0.1) +
#   scale_color_manual(values = cols) +
#   facet_wrap(~comname, nrow = 1) +
#   scale_y_continuous(breaks = c(42,44,46)) + scale_x_continuous(breaks = c(-74,-70,-66)) +
#   xlab("Longitude") + ylab("Latitude") +
#   theme_gmri(text = element_text(family = "Avenir"),
#              legend.position = "none",
#              axis.title = element_text(size = 10),
#              axis.text = element_text(size = 8),
#              strip.text = element_text(size = 12),
#              strip.background = element_rect(fill = "#00608A", color = "#00608A"),
#              plot.margin = margin(0.5, 1.5, 0.5, 0),
#              panel.border = element_rect(fill = NA, linetype = 1, linewidth = 0.2, color = "black"),
#              panel.grid.major = element_line(color = "lightgray", linetype = 3)) +
#   guides(color = guide_legend(size = 3, override.aes = list(size = 3))) -> plot3
# 
# 
# ggsave(here("plot1.png"), plot1, width = 400, height = 150, units = "mm", bg = "white")
# ggsave(here("plot2.png"), plot2, width = 200, height = 150, units = "mm", bg = "white") 
# ggsave(here("plot3.png"), plot3, width = 150, height = 150, units = "mm", bg = "white")


# can she do a density map...? 
# gonna have to do spatial stuff crap
```


